name: Publish
description: "Run publish "

inputs:
  working-directory:
    description: "Working directory"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v3
      with:
        node-version: 16.15.0

    - name: Lint
      id: check-eslint
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        mv ../../package.json ../../_package.json
        cp ../../yarn.lock ./yarn.lock
        yarn
        yarn lint
        mv ../../_package.json ../../package.json
        rm -rf ./yarn.lock

    - name: Test
      id: check-tests
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        mv ../../package.json ../../_package.json
        cp ../../yarn.lock ./yarn.lock
        yarn
        yarn test
        mv ../../_package.json ../../package.json
        rm -rf ./yarn.lock
        
    - name: Read Package Name from package.json
      id: package-json-name
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        echo "PACKAGE_NAME=$(node -pe "require('./package.json')['name']")" >> $GITHUB_ENV

    - name: Read Version from package.json
      id: package-json-version
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        echo "VERSION=$(node -pe "require('./package.json')['version']")" >> $GITHUB_ENV

    - name: Build & Publish
      id: run-yarn-publish
      working-directory: ${{inputs.working-directory}}
      shell: bash
      run: |
        echo "yarn publish --non-interactive --new-version ${{ env.VERSION }}"
        mv ../../package.json ../../_package.json
        cp ../../yarn.lock ./yarn.lock
        yarn
        yarn build
        npm publish
        mv ../../_package.json ../../package.json
        rm -rf ./yarn.lock
        yarn info ${{ env.PACKAGE_NAME }}@${{ env.VERSION }}
